/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 16 19:50:44 GMT 2020
 */

package utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import carros.Coordinate;
import carros.Veiculo;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import utils.ComparadorAutonomia;
import utils.ParDatas;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ComparadorAutonomia_ESTest extends utils.ComparadorAutonomia_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ComparadorAutonomia comparadorAutonomia0 = new ComparadorAutonomia();
      Veiculo veiculo0 = new Veiculo();
      Coordinate coordinate0 = new Coordinate(0.0, 693.72496);
      LinkedList<ParDatas> linkedList0 = new LinkedList<ParDatas>();
      Veiculo veiculo1 = new Veiculo("", "", (String) null, 1, 693.72496, 693.72496, 1, coordinate0, true, 31, linkedList0);
      int int0 = comparadorAutonomia0.compare(veiculo0, veiculo1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ComparadorAutonomia comparadorAutonomia0 = new ComparadorAutonomia();
      // Undeclared exception!
      try { 
        comparadorAutonomia0.compare((Veiculo) null, (Veiculo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("utils.ComparadorAutonomia", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ComparadorAutonomia comparadorAutonomia0 = new ComparadorAutonomia();
      Veiculo veiculo0 = new Veiculo();
      Veiculo veiculo1 = new Veiculo(veiculo0);
      veiculo1.setAutonomia((-1604));
      int int0 = comparadorAutonomia0.compare(veiculo0, veiculo1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ComparadorAutonomia comparadorAutonomia0 = new ComparadorAutonomia();
      Veiculo veiculo0 = new Veiculo();
      int int0 = comparadorAutonomia0.compare(veiculo0, veiculo0);
      assertEquals((-1), int0);
  }
}
